#
#   SPDX-License-Identifier: GPL-3.0-or-later
#
#   auto-suspend: A simple but handy system monitor
#   Copyright (C) 2024 loh.tar@googlemail.com
#
#   This auto-suspend is based on
#   https://bbs.archlinux.org/viewtopic.php?pid=1225757#p1225757
#   https://wiki.ubuntuusers.de/Archiv/Skripte/AutoSuspend/

# This config file also serves as manual to auto-suspend. Beside of the README
# is no documentation available. You need to change this file after install to
# fit your needs. Some default settings are just an example to give you an idea
# what to note there. Others are kept from the orig AutoSuspend script and may
# useful as they are without to cause trouble if you don't need it.

# There are other ways to disable this auto-suspend for some time, but here we
# have the main-switch. Any other setting than "on" means "off". With a setting
# of "off" is only a startup to check the state and suspend the system blocked,
# other commands are still working.
AutoSuspend="off"

# For historical reasons, there is still the possibility to operate in "clerk"
# mode, where some other system like cron or systemd-timer must start us
# periodical to have the desired effect. The new, and default mode, now is
# "daemon" where we keep running and do the periodical checking on our own.
# Any other setting than "clerk" means "daemon".
# And for the nerds: No, you're right, it's not a demon in the classic sense.
# While we can here set the default run mode, are also the command line
# arguments "daemon and "clerk" possible which override the setting here.
RunMode="daemon"

# That variable is verbatim used when we call "sleep" between two check runs,
# therefore you have to ensure "sleep" has nothing to complain or we will exit
# with an error. This setting has of cause only an effect in "daemon" mode.
# It is worth mention that we check two times the system status and only when
# the second check also says "idle" is the suspend performed. That's also valid
# when running in classic "clerk" mode btw!
CheckInterval="5m"

# How much info, what is going on, will be written to the system log. Any other
# setting than "verbose" means "silent", where still halfway important
# stuff will be logged.
LogLevel="verbose"

# When users are logged in is the system typically in use and suspend will be
# terminated. We test this by calling "who | wc -l". But there may be cases
# where you want to ignore a certain number of logged in in users.
IgnoreLoginCount="0"

# Important applications that shall prevent the suspend when running.
# The values are used with "pgrep -c $i", and when more than zero is reported
# auto suspend will terminated.
Processes="^nxagent$ ^rsnapshot$ ^wsus$ ^wget$ ^screen$ ^mlnetp$ ^cp$"

# Daemons that always have one process running even when idle, and fork itself
# when active needs to be placed here. The values are used with "pgrep -c $i",
# and when more than one is reported auto suspend will terminated.
Daemons="foo bar"

# Network IP range for checking any open samba connections. The value is used
# with "smbstatus | grep -c $1" and when more than zero is reported auto suspend
# will terminated. If you don't have samba installed, don't care!
SambaNetwork="192.168.1."

# Names or IPs for systems that shall prevent the suspend. We ping these
# addresses in the list and check if they answer.
# Ensure you have the proper settings!
Clients="barts-pc lisas-laptop 192.168.1.123"

# Do not auto suspend when this directory is not empty. As mentioned above, here
# is another way to disable auto-suspend for some time. Just "touch" some file
# in this directory and you are done. For your convenience there are the two
# commands 'on' and 'off' supported. This could be useful to use it in a script
# that is only used once or is not added to the Processes/Daemons lists for
# whatever reason. Or simply to disable manually auto suspend for some time.
# OffDir="/var/spool/auto-suspend_off"
OffDir="/tmp/auto-suspend_off"

# This file is either created or deleted after a check run. If the system is
# used will the file deleted. If the system is in idle mode, will the file
# created. Or, if the file already exist, will the system finally suspended.
# IdleFile="/var/spool/auto-suspend_idle_marker"
IdleFile="/tmp/auto-suspend_idle_marker"

# Here is the beef! This command is called to finally suspend the system. If you
# do not use systemd modify the setting as needed. TIP: You could also call some
# custom command/script to do anything else, like rtcwake.
# If an error occurs, either because the command was not found or an error was
# reported, auto-suspend will exit with a not very helpful message.
SuspendCommand="systemctl suspend"
